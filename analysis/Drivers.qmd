---
title: "Drivers"
format: html
editor: visual
---

```{r}
library(tidyverse)
observations <- read_csv("../L1_target.csv", show_col_types = F) %>%
  mutate(datetime_observed = datetime,
         datetime = as.Date(paste(year(datetime), month(datetime), "01", sep = "-"))) %>%
  group_by(project_id, site_id, datetime, duration, variable) %>%
  summarize(observation = mean(observation, na.rm = T),
            dates_observed = list(unique(datetime_observed)),
            .groups = "drop")
observations2 <- observations %>%
  mutate(site_id = paste0(substr(site_id, 1, 1), substr(site_id, 3, 3))) %>%
  group_by(project_id, site_id, datetime, duration, variable) %>%
  summarize(observation = mean(observation, na.rm = T),
            .groups = "drop")

metadata <- read_csv(here::here("Raw_data", "plot_treatments.csv")) %>%
  mutate(Type = "Separate")

noaa_past_mean <- read_csv(here::here("met_downloads",
                                        "monthly_forecasts.csv"),
                             show_col_types = F) %>%
    filter(horizon == 1) %>%
    group_by(datetime, variable) %>%
    summarize(prediction = mean(prediction, na.rm = T), .groups = "drop") %>%
    pivot_wider(names_from = "variable", values_from = "prediction")

library(randomForest)
importance_df <- function(rf_output){
  out <- data.frame(importance(rf_output))
  out$name <- row.names(out)
  return(out)
}

pairs(noaa_past_mean)

observations %>%
  left_join(noaa_past_mean) %>%
  mutate(site_id = as.numeric(site_id)) %>%
  left_join(metadata, by = c("site_id" = "Plot")) %>%
  filter(CO2Treat == "Amb") %>%
  group_by(Veg, Temp, site_id) %>%
  reframe(importance_df(randomForest::randomForest(observation ~ 
                                        Temp_K * 
                                        SolarRad_Wm2 * 
                                        PrecipRate_ms *
                                        WindSpeed_ms *
                                        Pressure_Pa,
                                        importance = T))) %>%
  ggplot(aes(x = X.IncMSE, y = name, color = as.factor(site_id)))+
  geom_point()+
  ggh4x::facet_nested(Veg~Temp)+
  theme(legend.position = "none")

obs_arima = observations |>
    complete(datetime = seq.Date(from = min(datetime), 
                                 to = max(datetime),
                                 by = "month"), 
             site_id)

arima_df <- function(arima_output){
  out <- data.frame(t(arima_output$coef))
  return(out)
}

arima_res <- obs_arima %>%
  mutate(site_id = as.numeric(site_id)) %>%
  left_join(metadata, by = c("site_id" = "Plot")) %>%
  filter(CO2Treat == "Amb") %>%
  group_by(Veg, Temp, site_id) %>%
  reframe(arima_df(forecast::auto.arima(ts(observation, frequency = 12), D = 1))) %>%
  pivot_longer(sar1:ma2) 

arima_res %>%
  mutate(value = ifelse(is.na(value), 0, value),
         Temp = as.numeric(Temp)) %>%
  ggplot(aes(x = Temp, y = value))+
  geom_hline(yintercept = 0) +
  geom_point(alpha = 0.5)+
  geom_smooth(method = "lm")+
  ggh4x::facet_grid2(Veg~name, scales = "free_y", independent = "y")+
  theme(legend.position = "none")
```
