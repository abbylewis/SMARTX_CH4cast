---
title: "Forecast scores"
format: html
editor: visual
---

## Load data

```{r}
library(tidyverse)

#Load saved scores
#Generated by 01 - Score forecasts.qmd
scores <- read_csv("scores.csv", show_col_types = F)
scores_format_all <- read_csv("scores_format_all.csv")
scores_format <- scores_format_all %>%
  filter(Type == "Separate")
```

## Generate plots

```{r}
desat <- function(cols, sat=0.5) {
    X <- diag(c(1, sat, 1)) %*% rgb2hsv(col2rgb(cols))
    hsv(X[1,], X[2,], X[3,])
}

grmse <- function(observation, forecast){
  errors <- abs(forecast-observation)
  grmse <- exp(mean(log(errors)))
  return(grmse)
}

jpeg("../figures/RMSE_ambCO2.jpg", width = 5, height = 2.5, units = "in", res = 300)
scores_format %>%
  filter(horizon %in% c(6),
         CO2Treat == "Amb") %>%
  mutate(CO2Treat = case_match(CO2Treat,
                               "Amb" ~ "Ambient~CO[2]",
                               "Elev" ~ "Elevated~CO[2]"),
         Veg = case_match(Veg,
                          "C3" ~ "C[3]",
                          "C4" ~ "C[4]"),) %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            n = n(),
            .groups = "drop") %>%
  mutate(Temp = as.factor(Temp)) %>%
  ggplot(aes(x = Temp, 
             y = rmse)) +
  geom_jitter(aes(color = model_id, group = CO2Treat), 
              width = 0.3,
              size = 1) +
  geom_boxplot(outliers = F, alpha = 0, linewidth = 0.3) +
  ggh4x::facet_nested(.~Veg, 
                      space = "free_x", scales = "free_x",
                      labeller = label_parsed)+
  scale_linetype_manual(values = c("solid", "31"), 
                     labels = c("Ambient","Elevated"))+
  scale_color_manual(values = colorspace::lighten(desat(viridis::viridis(11), 0.3), 0.6))+
  xlab("Temperature treatment (ºC above ambient)")+
  ylab(expression(atop("Error of 6-month forecast",(RMSE*";"~µmol/m^{2}/d))))+
  theme_bw(base_size = 10)+
  guides(color = guide_legend(byrow = TRUE, title = "Model"))+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.key.height = unit(0.7, 'lines'),
        legend.text = element_text(margin = ggplot2::margin(t = 0, b = 0)),
        panel.grid.major.x = element_blank())
dev.off()

jpeg("../figures/RMSE_models.jpg", width = 5, height = 4.5, units = "in", res = 300)
scores_format %>%
  filter(horizon %in% c(6),
         CO2Treat == "Amb") %>%
  mutate(CO2Treat = case_match(CO2Treat,
                               "Amb" ~ "Ambient~CO[2]",
                               "Elev" ~ "Elevated~CO[2]"),
         Temp = paste0("''+", Temp, "~degree~C"),
         Veg = case_match(Veg,
                          "C3" ~ "C[3]",
                          "C4" ~ "C[4]"),
         Transect = as.factor(ifelse(Transect > 3, Transect - 3, Transect))) %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, Transect) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            n = n(),
            .groups = "drop") %>%
  mutate(Temp = as.factor(Temp)) %>%
  ggplot(aes(y = model_id, 
             x = rmse)) +
  geom_point(aes(shape = Transect)) +
  ggh4x::facet_nested(Veg~Temp, 
                      scales = "free", independent = "x",
                      labeller = label_parsed)+
  xlab(expression(Error~of~"6-month"~forecast~"("*RMSE*";"~µmol/m^{2}/d*")"))+
  theme_bw(base_size = 10)+
  scale_x_continuous(n.breaks = 4)+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.key.height = unit(0.7, 'lines'),
        legend.position = "bottom",
        axis.title.y = element_blank(),
        legend.text = element_text(margin = ggplot2::margin(t = 0, b = 0)),
        panel.grid.major.x = element_blank())
dev.off()

jpeg("../figures/nonRMSE_all.jpg", width = 6, height = 8, units = "in", res = 300)
scores_format %>%
  filter(horizon %in% c(6),
         CO2Treat == "Amb") %>%
  mutate(Temp = as.factor(Temp),
         Veg = case_match(Veg,
                          "C3" ~ "C[3]",
                          "C4" ~ "C[4]")) %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg) %>%
  summarize(bias = mean(mean - observation, na.rm = T),
            crps = mean(crps, na.rm = T),
            grmse = grmse(observation, mean),
            r2_11 = 1-sum((mean - observation)^2)/
              sum((observation - mean(observation, na.rm = T))^2),
            r2 = summary(lm(observation~mean))$r.squared,
            sd = mean(sd, na.rm = T),
            ign = mean(logs, na.rm = T),
            rmse_mean = Metrics::rmse(observation, mean)/mean(observation),
            grmse_mean = grmse/exp(mean(log(observation))),
            .groups = "drop") %>%
  pivot_longer(c(crps, bias, grmse, r2, rmse_mean, ign, sd)) %>%
  mutate(name = factor(name, levels = c("bias", "crps", "grmse", "r2","rmse_mean", "ign", "sd"),
                       label = c("Bias", "CRPS", "Geometric~RMSE", "R^{2}","RMSE/mean", "Ignorance", "SD")))%>%
  ggplot(aes(x = Temp, 
             y = value)) +
  geom_jitter(aes(color = model_id, group = CO2Treat), 
              width = 0.3,
              size = 1) +
  geom_boxplot(outliers = F, alpha = 0, linewidth = 0.3) +
  ggh4x::facet_nested(name~Veg, 
                      space = "free_x", scales = "free",
                      labeller = label_parsed)+
  scale_linetype_manual(values = c("solid", "31"), 
                     labels = c("Ambient","Elevated"))+
  scale_color_manual(values = colorspace::lighten(desat(viridis::viridis(10), 0.3), 0.6))+
  xlab("Temperature treatment\n(ºC above ambient)")+
  ylab("Forecast error")+
  theme_bw(base_size = 10)+
  guides(color = guide_legend(byrow = TRUE, title = "Model"),
         linetype = guide_legend(byrow = TRUE,
                     title = expression(CO[2]~Treatment)))+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.key.height = unit(0.7, 'lines'),
        legend.text = element_text(margin = ggplot2::margin(t = 0, b = 0)),
        panel.grid.major.x = element_blank())
dev.off()

summary <- scores_format %>%
  filter(horizon %in% c(6)) %>%
  mutate(Treatment = paste(Temp, CO2Treat)) %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, Treatment) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            n = n(),
            .groups = "drop") %>%
  mutate(Temp = as.factor(Temp)) %>%
  group_by(horizon, model_id, Temp, year, CO2Treat, Veg, Treatment) %>%
  mutate(model_mean_rmse = mean(rmse, na.rm = T)) %>%
  group_by(horizon, Temp, year, CO2Treat, Veg, Treatment) %>%
  summarize(rmse = mean(rmse))

summary$rmse[summary$Veg=="C3" & summary$Temp == 5.1 & summary$CO2Treat == "Amb"]/summary$rmse[summary$Veg=="C3" & summary$Temp == 0 & summary$CO2Treat == "Amb"]

summary$rmse[summary$Veg=="C3" & summary$Temp == 5.1 & summary$CO2Treat == "Elev"]/summary$rmse[summary$Veg=="C3" & summary$Temp == 5.1 & summary$CO2Treat == "Amb"]

summary$rmse[summary$Veg=="C3" & summary$Temp == 0 & summary$CO2Treat == "Elev"]/summary$rmse[summary$Veg=="C3" & summary$Temp == 0 & summary$CO2Treat == "Amb"]
```

## Stats

```{r}
rmse <- scores_format %>%
  filter(horizon == 6,
         CO2Treat == "Amb") %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg) %>%
  summarize(rmse = log(Metrics::rmse(observation, mean)),
            .groups = "drop")

#C3
mod_c3 <- lmerTest::lmer(rmse ~ Temp + (1|model_id) + (1|site_id), 
                      data = rmse[rmse$Veg == "C3", ])
summary(mod_c3)

#C4
mod_c4 <- lmerTest::lmer(rmse ~ Temp + (1|model_id) + (1|site_id), 
                      data = rmse[rmse$Veg == "C4", ])
summary(mod_c4)

#Both
mod_rmse_all <- lmerTest::lmer(rmse ~ Temp * Veg + (1|model_id) + (1|site_id), 
                      data = rmse)
summary(mod_rmse_all)
```
