---
title: "Forecast scores"
format: html
editor: visual
---

## Load data

```{r}
library(tidyverse)

#Load saved scores
#Generated by 01 - Score forecasts.qmd
scores <- read_csv("scores.csv", show_col_types = F)
scores_format_all <- read_csv("scores_format_all.csv")

desat <- function(cols, sat=0.5) {
    X <- diag(c(1, sat, 1)) %*% rgb2hsv(col2rgb(cols))
    hsv(X[1,], X[2,], X[3,])
}
```

## Which is best?

```{r}
scores_format %>%
  filter(horizon %in% c(6),
         CO2Treat=="Amb",
         Veg == "C3") %>%
  group_by(datetime, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(error = abs(mean - observation)) %>%
  arrange(error) %>%
  mutate(Rank = min_rank(error),
         n = n()) %>%
  filter(n == 10) %>%
  mutate(Rank_group = case_when(Rank %in% c(1,2,3) ~ "Top 30%",
                                Rank %in% c(4,5,6,7) ~ "Middle",
                                Rank %in% c(8,9,10) ~ "Bottom 30%")) %>%
  group_by(Temp, year, CO2Treat, Veg, Rank_group, model_id, model_type) %>%
  summarize(n = n()) %>%
  group_by(Temp, year, CO2Treat, Veg, model_id, model_type) %>%
  mutate(tot = sum(n)) %>%
  filter(Rank_group == "Top 30%") %>%
  ggplot(aes(y = model_id, 
             x = n/tot*100, 
             fill = model_id)) +
  geom_col()+
  xlab("Percent of forecasts that rank in the top 30%\nacross all models by accuracy")+
  ggh4x::facet_nested(model_type~Temp, scales = "free_y", space = "free_y")+
  scale_fill_viridis_d()+
  theme_bw()+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.position = "none",
        axis.title.y = element_blank())

#jpeg("../figures/beating climatology.jpg", res = 300, units = "in", width = 5, height = 3)
scores_format %>%
  filter(horizon %in% c(6),
         CO2Treat == "Amb") %>%
  group_by(datetime, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(climatology_score = abs(mean[model_id == "Climatology"] - observation),
         beats_climatology = ifelse(abs(mean - observation) <= climatology_score, 1, 0)) %>%
  group_by(Temp, year, CO2Treat, Veg, model_id, model_type) %>%
  summarize(pct = sum(beats_climatology)/n()*100) %>%
  filter(!model_id == "Climatology") %>%
  ggplot(aes(x = Temp, y = pct)) +
  geom_line(aes(color = model_id))+
  #geom_smooth(method="lm", color = "black")+
  #geom_boxplot()+
  geom_point(aes(color = model_id))+
  scale_color_manual(values = viridis::viridis(11)[c(2:10)], name = "Model")+
  ylab("Percent of forecasts that are\nmore accurate than the climatology model")+
  ggh4x::facet_nested(model_type~Veg)+
  theme_bw()+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.key.height = unit(0.7, 'lines'),
        legend.text = element_text(margin = ggplot2::margin(t = 0, b = 0)),)
#dev.off()

#jpeg("../figures/optimal model.jpg", res = 300, units = "in", width = 5, height = 3)
clim <- scores_format %>%
  filter(horizon %in% c(6)) %>%
  mutate(CO2Treat = case_match(CO2Treat,
                               "Amb" ~ "Ambient~CO[2]",
                               "Elev" ~ "Elevated~CO[2]"),
         model_type = sub(" ", "~", model_type)) %>%
  group_by(Temp, year, CO2Treat, Veg, model_id, model_type, site_id) %>%
  summarize(rmse = Metrics::rmse(observation, mean), .groups = "drop") %>%
  group_by(Temp, year, CO2Treat, Veg, site_id) %>%
  mutate(clim_rmse = unique(rmse[model_id == "Climatology"]),
            rmse_relative = (rmse - clim_rmse) / clim_rmse) %>%
  filter(!model_id == "Climatology") %>%
  ungroup()

clim %>%
  mutate(Temp = as.factor(Temp)) %>%
  filter(CO2Treat == "Ambient~CO[2]") %>%
  ggplot(aes(x = Temp, y = rmse_relative, color = model_id)) +
  geom_hline(yintercept = 0, color = "grey50")+
  #geom_smooth(se = F, method = "lm")+
  geom_point(alpha = 0.3)+
  geom_boxplot()+
  scale_color_viridis_d(name = "Model")+
  ylab("RMSE relative to climatology model")+
  xlab("Temperature treatment (ºC above ambient)")+
  ggh4x::facet_grid2(Veg~model_type, labeller = label_parsed, scales = "free")+
  #scale_color_manual(values = colorspace::lighten(desat(viridis::viridis(10), 0.3), 0.6))+
  theme_bw(base_size = 10) +
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.key.height = unit(0.7, 'lines'))
#dev.off()

z_score <- function(x) {
  (x - mean(x)) / sd(x)
}

rmse_med <- scores_format %>%
  filter(horizon %in% c(6),
         CO2Treat == "Amb") %>%
  mutate(CO2Treat = case_match(CO2Treat,
                               "Amb" ~ "Ambient~CO[2]",
                               "Elev" ~ "Elevated~CO[2]"),
         model_type = ifelse(model_type %in% c("time series", "climatology"), "empirical", model_type),
         model_type = sub(" ", "~", model_type)
         ) %>%
  group_by(Temp, year, CO2Treat, Veg, model_id, model_type, Transect) %>%
  mutate(rmse = Metrics::rmse(observation, mean)) %>%
  group_by(Temp, year, CO2Treat, Veg, Transect) %>%
  mutate(rmse_med = rmse / median(rmse))

rmse_med %>%
  ggplot(aes(x = Temp, y = rmse_med, color = model_id)) +
  geom_hline(yintercept = 1, color = "grey50")+
  geom_point(alpha = 0.5)+
  geom_smooth(method = "lm", se = F)+
  scale_color_viridis_d(name = "Model")+
  ylab("RMSE / median RMSE")+
  xlab("Temperature treatment (ºC above ambient)")+
  ggh4x::facet_nested(Veg~model_id)+
  theme_bw(base_size = 10) +
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"))

mod_c3 <- lmerTest::lmer(rmse_med ~ Temp * model_id + (1|site_id), data = rmse_med %>% filter(Veg == "C3"))
summary(mod_c3)

clim_c3 <- lmerTest::lmer(rmse_relative ~ Temp * Veg * model_id + (1|site_id), data = clim %>% ungroup () %>% filter(CO2Treat == "Ambient~CO[2]"))
summary(clim_c3)
```
