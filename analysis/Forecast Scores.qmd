---
title: "Forecast scores"
format: html
editor: visual
---

## Load data

```{r}
#devtools::install_github("eco4cast/score4cast")
library(score4cast)
library(tidyverse)
source("../R/score_all_forecasts.R")
#Metrics

#Forecasts
outputs <- list.files("../outputs", full.names = T)
outputs <- outputs[file.info(outputs)$size > 29] #Filter out empty files
#forecasts <- read_csv(outputs, show_col_types = F)
#oops-- model name in file does not include 2021 distinction
load_forecast <- function(name){
  model_id_new <- sub(".*-", "", sub(".csv.gz", "", name))
  forecast <- read_csv(name, 
                       col_types = "ccDDcncccn") %>%
    mutate(model_id = model_id_new)
}

forecasts <- outputs %>%
  map(load_forecast) %>%
  bind_rows()

#L1
observations <- read_csv("../L1_target.csv", show_col_types = F) %>%
  mutate(datetime_observed = datetime,
         datetime = as.Date(paste(year(datetime), month(datetime), "01", sep = "-"))) %>%
  group_by(project_id, site_id, datetime, duration, variable) %>%
  summarize(observation = mean(observation),
            dates_observed = list(unique(datetime_observed)),
            .groups = "drop")

#Metadata
metadata <- read_csv(here::here("Raw_data", "plot_treatments.csv"))

observations %>%
  ggplot(aes(x = datetime, y = observation))+
  geom_point()+
  facet_wrap(~site_id)
```

## Score forecasts

```{r}
#Re-score if needed, otherwise load saved scores
scores <- score_all_forecasts(forecasts, observations)
scores <- read_csv("scores.csv", show_col_types = F)

scores_format <- scores %>%
  filter(horizon > 0, !model_id == "persistence") %>%
  mutate(horizon = round(as.numeric(difftime(datetime,reference_datetime, units = "days")/30.5))) %>%
  left_join(metadata, by = c("site_id" = "Plot")) %>%
  mutate(year = year(datetime),
         model_id = factor(model_id,
                           levels = c("persistence", "auto.arima", "ets", "prophet", "rEDM", 
                                      "climatology", "cwae", "lasso", "met_lm_step",
                                      "randomForest", "ridge")),
         model_type = ifelse(model_id %in% c("auto.arima", "ets", "prophet", "rEDM"),
                             "time series",
                             NA),
         model_type = ifelse(model_id %in% c("climatology", "cwae"),
                             "climatology",
                             model_type),
         #model_type = ifelse(model_id %in% c("persistence"),
        #                     "persistence",
        #                     model_type),
         model_type = ifelse(model_id %in% c("lasso", "met_lm_step", "randomForest", "ridge"),
                             "machine learning",
                             model_type)) %>%
  filter(year %in% c(2024))
```

## Generate plots

### MONEY FIGS

```{r}
desat <- function(cols, sat=0.5) {
    X <- diag(c(1, sat, 1)) %*% rgb2hsv(col2rgb(cols))
    hsv(X[1,], X[2,], X[3,])
}

grmse <- function(observation, forecast){
  errors <- abs(forecast-observation)
  grmse <- exp(mean(log(errors)))
  return(grmse)
}

jpeg("../figures/RMSE_all.jpg", width = 6, height = 3, units = "in", res = 300)
scores_format %>%
  filter(horizon %in% c(6)) %>%
  mutate(Treatment = paste(Temp, CO2Treat)) %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, Treatment) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            n = n(),
            .groups = "drop") %>%
  mutate(Temp = as.factor(Temp)) %>%
  ggplot(aes(x = Temp, 
             y = rmse)) +
  geom_jitter(aes(color = model_id, group = CO2Treat), 
              width = 0.3,
              size = 1) +
  geom_boxplot(outliers = F, alpha = 0, linewidth = 0.3) +
  ggh4x::facet_nested(.~Veg+CO2Treat, space = "free_x", scales = "free_x")+
  scale_linetype_manual(values = c("solid", "31"), 
                     labels = c("Ambient","Elevated"))+
  scale_color_manual(values = colorspace::lighten(desat(viridis::viridis(10), 0.3), 0.6))+
  xlab("Temperature treatment\n(ºC above ambient)")+
  ylab("RMSE of 6-month forecast\n(µmol/m2/d)")+
  theme_bw(base_size = 10)+
  guides(color = guide_legend(byrow = TRUE, title = "Model"))+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.key.height = unit(0.7, 'lines'),
        legend.text = element_text(margin = margin(t = 0, b = 0)),
        panel.grid.major.x = element_blank())
dev.off()

jpeg("../figures/CRPS_all.jpg", width = 6, height = 4, units = "in", res = 300)
scores_format %>%
  filter(horizon %in% c(6)) %>%
  mutate(Treatment = paste(Temp, CO2Treat),
         Temp = as.factor(Temp)) %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, Treatment) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            crps = mean(crps, na.rm = T),
            n = n(),
            .groups = "drop") %>%
  pivot_longer(c(crps, rmse)) %>%
  mutate(name = factor(name, levels = c("rmse", "crps"),
                       label = c("RMSE (µmol/m2/d)", "CRPS")))%>%
  ggplot(aes(x = Temp, 
             y = value)) +
  geom_jitter(aes(color = model_id, group = CO2Treat), 
              position = position_jitterdodge(jitter.width = 1, dodge.width = 0.8),
              size = 1) +
  geom_boxplot(aes(linetype = CO2Treat), outliers = F, width = 0.8, alpha = 0, linewidth = 0.3) +
  facet_grid(name~Veg, scale = "free_y")+
  scale_linetype_manual(values = c("solid", "31"), 
                     labels = c("Ambient","Elevated"))+
  scale_color_manual(values = colorspace::lighten(desat(viridis::viridis(10), 0.3), 0.6))+
  xlab("Temperature treatment\n(ºC above ambient)")+
  ylab("Forecast error")+
  theme_bw(base_size = 10)+
  guides(color = guide_legend(byrow = TRUE, title = "Model"),
         linetype = guide_legend(byrow = TRUE,
                     title = expression(CO[2]~Treatment)))+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.key.height = unit(0.7, 'lines'),
        legend.text = element_text(margin = margin(t = 0, b = 0)),
        panel.grid.major.x = element_blank())
dev.off()

jpeg("../figures/nonRMSE_all.jpg", width = 6, height = 5, units = "in", res = 300)
scores_format %>%
  filter(horizon %in% c(6)) %>%
  mutate(Treatment = paste(Temp, CO2Treat),
         Temp = as.factor(Temp)) %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, Treatment) %>%
  summarize(bias = mean(mean - observation, na.rm = T),
            crps = mean(crps, na.rm = T),
            grmse = grmse(observation, mean),
            r2_11 = 1-sum((mean - observation)^2)/sum((observation - mean(observation, na.rm = T))^2),
            r2 = summary(lm(observation~mean))$r.squared,
            rmse_mean = Metrics::rmse(observation, mean)/mean(observation),
            #grmse_mean = grmse/exp(mean(log(observation))),
            .groups = "drop") %>%
  pivot_longer(c(crps, bias, grmse, r2, rmse_mean)) %>%
  mutate(name = factor(name, levels = c("bias", "crps", "grmse", "r2","rmse_mean"),
                       label = c("Bias", "CRPS", "Geometric RMSE", "R2","RMSE/mean")))%>%
  ggplot(aes(x = Temp, 
             y = value)) +
  geom_jitter(aes(color = model_id, group = CO2Treat), 
              width = 0.3,
              size = 1) +
  geom_boxplot(outliers = F, alpha = 0, linewidth = 0.3) +
  ggh4x::facet_nested(name~Veg+CO2Treat, space = "free_x", scales = "free")+
  scale_linetype_manual(values = c("solid", "31"), 
                     labels = c("Ambient","Elevated"))+
  scale_color_manual(values = colorspace::lighten(desat(viridis::viridis(10), 0.3), 0.6))+
  xlab("Temperature treatment\n(ºC above ambient)")+
  ylab("Forecast error")+
  theme_bw(base_size = 10)+
  guides(color = guide_legend(byrow = TRUE, title = "Model"),
         linetype = guide_legend(byrow = TRUE,
                     title = expression(CO[2]~Treatment)))+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.key.height = unit(0.7, 'lines'),
        legend.text = element_text(margin = margin(t = 0, b = 0)),
        panel.grid.major.x = element_blank())
dev.off()

jpeg("../figures/GRMSE_all.jpg", width = 6, height = 3, units = "in", res = 300)
scores_format %>%
  filter(horizon %in% c(6)) %>%
  mutate(Treatment = paste(Temp, CO2Treat)) %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, Treatment) %>%
  summarize(rmse = grmse(observation, mean),
            n = n(),
            .groups = "drop") %>%
  mutate(Temp = as.factor(Temp)) %>%
  ggplot(aes(x = Temp, 
             y = rmse)) +
  geom_jitter(aes(color = model_id, group = CO2Treat), 
              position = position_jitterdodge(jitter.width = 1, dodge.width = 0.8),
              size = 1) +
  geom_boxplot(aes(linetype = CO2Treat), outliers = F, width = 0.8, alpha = 0, linewidth = 0.3) +
  facet_grid(.~Veg)+
  scale_linetype_manual(values = c("solid", "31"), 
                     labels = c("Ambient","Elevated"))+
  scale_color_manual(values = colorspace::lighten(desat(viridis::viridis(10), 0.3), 0.6))+
  xlab("Temperature treatment\n(ºC above ambient)")+
  ylab("Geometric RMSE of 6-month forecast\n(µmol/m2/d)")+
  theme_bw(base_size = 10)+
  guides(color = guide_legend(byrow = TRUE, title = "Model"),
         linetype = guide_legend(byrow = TRUE,
                     title = expression(CO[2]~Treatment)))+
  theme(legend.key.height = unit(0.7, 'lines'),
        legend.text = element_text(margin = margin(t = 0, b = 0)),
        panel.grid.major.x = element_blank())
dev.off()

jpeg("../figures/RMSE_all_mean.jpg", width = 6, height = 3, units = "in", res = 300)
scores_format %>%
  filter(horizon %in% c(6)) %>%
  mutate(Treatment = paste(Temp, CO2Treat)) %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, Treatment) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            mean = mean(observation),
            n = n(),
            .groups = "drop") %>%
  mutate(Temp = as.factor(Temp)) %>%
  ggplot(aes(x = Temp, 
             y = rmse/mean)) +
  geom_hline(aes(yintercept = 1),color = "grey50")+
  geom_jitter(aes(color = model_id, group = CO2Treat), 
              position = position_jitterdodge(jitter.width = 1, dodge.width = 0.8),
              size = 1) +
  geom_boxplot(aes(linetype = CO2Treat), outliers = F, width = 0.8, alpha = 0, linewidth = 0.3) +
  facet_grid(.~Veg)+
  scale_linetype_manual(values = c("solid", "31"), 
                     labels = c("Ambient","Elevated"))+
  scale_color_manual(values = colorspace::lighten(desat(viridis::viridis(10), 0.3), 0.6))+
  xlab("Temperature treatment\n(ºC above ambient)")+
  ylab("RMSE of 6-month forecast\n(µmol/m2/d)")+
  theme_bw(base_size = 10)+
  guides(color = guide_legend(byrow = TRUE, title = "Model"),
         linetype = guide_legend(byrow = TRUE,
                     title = expression(CO[2]~Treatment)))+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.key.height = unit(0.7, 'lines'),
        legend.text = element_text(margin = margin(t = 0, b = 0)),
        panel.grid.major.x = element_blank())
dev.off()

jpeg("../figures/mean and sd.jpg", res = 300, units = "in", width = 4, height = 4)
scores_format %>%
  filter(horizon == 6, year == 2024) %>%
  group_by(horizon, site_id, Temp, year, CO2Treat, Veg, Transect) %>%
  summarize(mean = mean(observation, na.rm = T),
            sd = sd(observation, na.rm = T),
            cv = sd/mean,
            n = n(),
            .groups = "drop") %>%
  pivot_longer(cols = c(mean, sd, cv))%>%
  mutate(name = factor(name, 
                       levels = c("mean", "sd", "cv"),
                       labels = c("Mean", "SD", "CV"))) %>%
  ggplot(aes(x = as.factor(Temp), 
             y = value)) +
  geom_point() +
  ggh4x::facet_nested(name~Veg+CO2Treat, 
                      labeller = label_parsed, 
                      scales = "free_y")+
  ylab("Value")+
  scale_color_viridis_d()+
  xlab("Temperature treatment (ºC above ambient)")+
  theme_bw(base_size = 10)+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"))
dev.off()

summary <- scores_format %>%
  filter(horizon %in% c(6)) %>%
  mutate(Treatment = paste(Temp, CO2Treat)) %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, Treatment) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            n = n(),
            .groups = "drop") %>%
  mutate(Temp = as.factor(Temp)) %>%
  group_by(horizon, model_id, Temp, year, CO2Treat, Veg, Treatment) %>%
  mutate(model_mean_rmse = mean(rmse, na.rm = T)) %>%
  group_by(horizon, Temp, year, CO2Treat, Veg, Treatment) %>%
  summarize(rmse = mean(rmse))

summary$rmse[summary$Veg=="C3" & summary$Temp == 5.1 & summary$CO2Treat == "Amb"]/summary$rmse[summary$Veg=="C3" & summary$Temp == 0 & summary$CO2Treat == "Amb"]

summary$rmse[summary$Veg=="C3" & summary$Temp == 5.1 & summary$CO2Treat == "Elev"]/summary$rmse[summary$Veg=="C3" & summary$Temp == 5.1 & summary$CO2Treat == "Amb"]

summary$rmse[summary$Veg=="C3" & summary$Temp == 0 & summary$CO2Treat == "Elev"]/summary$rmse[summary$Veg=="C3" & summary$Temp == 0 & summary$CO2Treat == "Amb"]
```

```{r}
jpeg("../figures/Forecasts.jpg", width = 6.5, height = 4, units = "in", res = 300)
scores_format %>%
  group_by(Veg, CO2Treat) %>%
  mutate(CO2Treat = case_match(CO2Treat,
                               "Amb" ~ "Ambient~CO[2]",
                               "Elev" ~ "Elevated~CO[2]"),
         Temp = paste0(Temp, "~degree~C"),
         Transect = ifelse(Transect > 3, Transect - 3, Transect),
         mod = paste(model_id, site_id))%>%
  filter(horizon == 6) %>%
  ggplot(aes(x = datetime))+
  geom_ribbon(aes(ymin = mean - sd, ymax = mean + sd, fill = model_id), alpha = 0.1)+
  geom_line(aes(y = mean, color = model_id))+
  geom_point(aes(y = observation), size = 0.5)+
  ggh4x::facet_nested(Temp~Veg+CO2Treat+Transect, labeller = label_parsed)+
  scale_color_viridis_d(name = "Model")+
  scale_fill_viridis_d(name = "Model")+
  coord_cartesian(ylim = c(-200,10000))+
  scale_x_date(date_breaks = "4 month", date_labels = "%b")+
  scale_y_continuous(n.breaks = 3)+
  theme_bw(base_size = 10) +
  ylab("Methane flux (µmol/m2/d)")+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        axis.title.x = element_blank(),
        legend.position = "bottom",
        strip.text = element_text(margin = margin(0.1,0.1,0.1,0.1, "lines")))
dev.off()

jpeg("../figures/Forecasts_freey.jpg", width = 10, height = 5, units = "in", res = 300)
scores_format %>%
  group_by(Veg, CO2Treat) %>%
  mutate(CO2Treat = case_match(CO2Treat,
                               "Amb" ~ "Ambient~CO[2]",
                               "Elev" ~ "Elevated~CO[2]"),
         Transect = ifelse(Transect > 3, Transect - 3, Transect),
         Temp = paste0(Temp, "~degree~C"),
         mod = paste(model_id, site_id))%>%
  filter(horizon == 6) %>%
  ggplot(aes(x = datetime))+
  geom_line(aes(y = mean, color = model_id))+
  geom_point(aes(y = observation))+
  ggh4x::facet_nested(Temp~Veg+CO2Treat+Transect, labeller = label_parsed, scales = "free_y", independent = "y")+
  scale_color_viridis_d(name = "Model")+
  scale_fill_viridis_d(name = "Model")+
  scale_x_date(date_breaks = "4 month", date_labels = "%b")+
  scale_y_continuous(n.breaks = 3)+
  theme_bw(base_size = 10) +
  ylab("Methane flux (µmol/m2/d)")+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        axis.title.x = element_blank(),
        legend.position = "bottom",
        strip.text = element_text(margin = margin(0.1,0.1,0.1,0.1, "lines")))
dev.off()
```


### Relative to mean

```{r}
scores_format %>%
  filter(horizon == 6, year == 2024) %>%
  group_by(horizon, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(mean_obs = mean(observation, na.rm = T),
            sd = sd(observation, na.rm = T),
            n = n(),
            .groups = "drop") %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, model_type) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            mean = unique(mean_obs),
            n = n(),
            .groups = "drop") %>%
  ggplot(aes(x = as.factor(Temp), 
             y = rmse/mean)) +
  geom_hline(yintercept = 1) +
  geom_boxplot(aes(color = model_type), outliers = F) +
  ggh4x::facet_grid2(CO2Treat~Veg, scales = "free_y", independent = "y")+
  xlab("Soil temperature (ºC above ambient)")+
  scale_color_viridis_d()+
  theme_bw(base_size = 10)

scores_format %>%
  filter(horizon == 6, year == 2024) %>%
  group_by(horizon, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(mean_obs = mean(observation, na.rm = T),
            sd = sd(observation, na.rm = T),
            n = n(),
            .groups = "drop") %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, model_type) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            mean = unique(mean_obs),
            n = n(),
            .groups = "drop") %>%
  ggplot(aes(x = mean, y = rmse)) +
  geom_point()+
  geom_smooth()+
  geom_abline()
```

Which is best?
```{r}
scores_format %>%
  filter(horizon %in% c(6),
         CO2Treat=="Amb",
         Veg == "C3") %>%
  group_by(datetime, site_id, Temp, year, CO2Treat, Veg) %>%
  arrange(crps) %>%
  mutate(Rank = min_rank(crps),
         n = n()) %>%
  filter(n == 10) %>%
  mutate(Rank_group = case_when(Rank %in% c(1,2,3) ~ "Top 30%",
                                Rank %in% c(4,5,6,7) ~ "Middle",
                                Rank %in% c(8,9,10) ~ "Bottom 30%")) %>%
  group_by(Temp, year, CO2Treat, Veg, Rank_group, model_id, model_type) %>%
  summarize(n = n()) %>%
  group_by(Temp, year, CO2Treat, Veg, model_id, model_type) %>%
  mutate(tot = sum(n)) %>%
  filter(Rank_group == "Top 30%") %>%
  ggplot(aes(y = model_id, 
             x = n/tot*100, 
             fill = model_id)) +
  geom_col()+
  xlab("Percent of forecasts that rank in the top 30% across all models")+
  ggh4x::facet_nested(model_type~Temp, scales = "free_y", space = "free_y")+
  scale_fill_viridis_d()+
  theme_bw()+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"),
        legend.position = "none",
        axis.title.y = element_blank())

scores_format %>%
  filter(horizon %in% c(6),
         CO2Treat=="Amb",
         Veg == "C3") %>%
  group_by(datetime, site_id, Temp, year, CO2Treat, Veg) %>%
  arrange(crps) %>%
  mutate(Rank = min_rank(crps),
         n = n()) %>%
  filter(n == 10) %>%
  mutate(Rank_group = case_when(Rank %in% c(1,2,3) ~ "Top 30%",
                                Rank %in% c(4,5,6,7) ~ "Middle",
                                Rank %in% c(8,9,10) ~ "Bottom 30%")) %>%
  group_by(Temp, year, CO2Treat, Veg, Rank_group, model_id, model_type) %>%
  summarize(n = n()) %>%
  group_by(Temp, year, CO2Treat, Veg, model_id, model_type) %>%
  mutate(tot = sum(n)) %>%
  filter(Rank_group == "Top 30%") %>%
  ggplot(aes(x = Temp, 
             y = n/tot*100, 
             color = model_id)) +
  geom_point()+
  geom_line()+
  ylab("Percent of forecasts that rank\nin the top 30% across all models")+
  ggh4x::facet_nested(.~model_type)+
  scale_color_viridis_d()+
  theme_bw()+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"))

scores_format %>%
  filter(horizon %in% c(6)) %>%
  group_by(datetime, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(climatology_score = crps[model_id == "climatology"],
         beats_climatology = ifelse(crps < climatology_score, 1, 0)) %>%
  group_by(Temp, year, CO2Treat, Veg, model_id, model_type) %>%
  summarize(pct = sum(beats_climatology)/n()) %>%
  filter(!model_id == "climatology") %>%
  ggplot(aes(x = Temp, y = pct, color = model_id)) +
  geom_line(aes(lty = model_type))+
  scale_color_viridis_d()+
  ggh4x::facet_nested(~Veg+CO2Treat)+
  theme_bw()+
  ylab("Percent of forecasts with a lower\ncrps than the climatology model")+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"))

scores_format %>%
  filter(horizon %in% c(6)) %>%
  group_by(datetime, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(climatology_score = abs(mean[model_id == "climatology"] - observation),
         beats_climatology = ifelse(abs(mean - observation) <= climatology_score, 1, 0)) %>%
  group_by(Temp, year, CO2Treat, Veg, model_id, model_type) %>%
  summarize(pct = sum(beats_climatology)/n()) %>%
  filter(!model_type == "climatology") %>%
  ggplot(aes(x = Temp, y = pct, color = model_id)) +
  geom_hline(yintercept = 0.5, color = 'grey')+
  geom_line(alpha = 0.5)+
  geom_point()+
  scale_color_viridis_d()+
  ylab("Percent of forecasts that are\nmore accurate than the climatology model")+
  ggh4x::facet_nested(model_type~Veg+CO2Treat)+
  theme_bw()+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"))

scores_format %>%
  filter(horizon %in% c(6)) %>%
  group_by(datetime, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(climatology_score = crps[model_id == "climatology"]) %>%
  group_by(Temp, year, CO2Treat, Veg, model_id, model_type) %>%
  summarize(mean_crps = mean(crps, na.rm = T),
         relative_to_clim = mean_crps/mean(climatology_score, na.rm = T)) %>%
  filter(!model_type == "climatology") %>%
  ggplot(aes(x = Temp, y = relative_to_clim, color = model_id)) +
  geom_line(alpha = 0.5)+
  geom_point()+
  scale_color_viridis_d()+
  ylab("Mean forecast CRPS / mean CRPS of climatology model")+
  ggh4x::facet_nested(model_type~Veg+CO2Treat)+
  theme_bw()+
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"))

jpeg("../figures/optimal model.jpg", res = 300, units = "in", width = 4, height = 3)
scores_format %>%
  filter(horizon %in% c(6)) %>%
  group_by(Temp, year, CO2Treat, Veg, model_id, model_type) %>%
  mutate(rmse = Metrics::rmse(observation, mean)) %>%
  group_by(Temp, year, CO2Treat, Veg) %>%
  mutate(clim_rmse = unique(rmse[model_id == "climatology"]),
            rmse_relative = rmse/clim_rmse) %>%
  filter(!model_type == "climatology") %>%
  ggplot(aes(x = Temp, y = rmse_relative, color = model_id)) +
  geom_hline(yintercept = 1, color = "grey50")+
  geom_line(alpha = 0.5)+
  geom_point()+
  scale_color_viridis_d(name = "Model")+
  ylab("RMSE relative to climatology model")+
  ggh4x::facet_nested(model_type~Veg+CO2Treat)+
  theme_bw(base_size = 10) +
  theme(strip.background = element_rect(fill = "white",
                                        color = "grey85"))
dev.off()
```


Horizon

```{r}
scores_format %>%
  filter(CO2Treat == "Amb") %>%
  group_by(horizon, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(mean_obs = mean(observation, na.rm = T),
         sd = sd(observation, na.rm = T),
         n = n(),
         .groups = "drop") %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, model_type) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            mean = unique(mean_obs),
            n = n(),
            .groups = "drop") %>%
  group_by(horizon, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(climate_rmse = rmse[model_id == "climatology"]) %>%
  filter(!model_type == "climatology") %>%
  ggplot(aes(x = horizon, 
             y = rmse/climate_rmse)) +
  geom_hline(yintercept = 1) +
  #geom_point(aes(color = model_type)) +
  geom_smooth(aes(color = model_type), se = F)+
  facet_grid(Temp~Veg)+
  xlab("Horizon (months)")+
  scale_color_viridis_d()+
  theme_bw(base_size = 10)

scores_format %>%
  filter(CO2Treat == "Amb") %>%
  group_by(horizon, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(mean_obs = mean(observation, na.rm = T),
            sd = sd(observation, na.rm = T),
            n = n(),
            .groups = "drop") %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, model_type) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            mean = unique(mean_obs),
            n = n(),
            .groups = "drop") %>%
  ggplot(aes(x = as.factor(Temp), 
             y = rmse/mean)) +
  geom_hline(yintercept = 1) +
  geom_boxplot(aes(color = model_type), outliers = F) +
  ggh4x::facet_grid2(horizon~Veg, scales = "free_y", independent = "y")+
  xlab("Soil temperature (ºC above ambient)")+
  scale_color_viridis_d()+
  theme_bw(base_size = 10)
```

```{r}
scores_format %>%
  filter(horizon == 6, year == 2024) %>%
  group_by(horizon, site_id, Temp, year, CO2Treat, Veg) %>%
  mutate(mean_obs = mean(observation, na.rm = T),
            sd = sd(observation, na.rm = T),
            n = n(),
            .groups = "drop") %>%
  group_by(horizon, site_id, model_id, Temp, year, CO2Treat, Veg, model_type) %>%
  summarize(rmse = Metrics::rmse(observation, mean),
            mean = unique(mean_obs),
            n = n(),
            .groups = "drop") %>%
  group_by(horizon, model_id, year, CO2Treat, Veg, model_type) %>%
  mutate(rmse_0 = mean(rmse[Temp == 0])) %>%
  ggplot(aes(x = as.factor(Temp), 
             y = rmse/rmse_0)) +
  geom_hline(yintercept = 1) +
  geom_boxplot(aes(color = model_type), outliers = F) +
  ggh4x::facet_grid2(CO2Treat~Veg, scales = "free_y", independent = "y")+
  xlab("Soil temperature (ºC above ambient)")+
  scale_color_viridis_d()+
  theme_bw(base_size = 10)
```
